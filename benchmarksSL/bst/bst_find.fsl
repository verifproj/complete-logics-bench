(Function key   Loc Int)
(Function left  Loc Loc)
(Function right Loc Loc)

(EqSp (BST (Keys Min Max)))

(RecFunction BST  Loc Bool)
(RecFunction Keys Loc SetInt)
(RecFunction Min  Loc Int)
(RecFunction Max  Loc Int)

(Var plus_infty Int)
(Var minus_infty Int)
(Var x Loc)
(Var lft Loc)
(Var rht Loc)
(Var k Int)

(RecDef (Min x) (ite (= x nil) plus_infty
                (ite (<= (key x) (Min (left x)))
                  (ite (<= (key x) (Min (right x)))
                    (key x)
                    (Min (right x))
                  )
                  (ite (<= (Min (left x)) (Min (right x)))
                    (Min (left x))
                    (Min (right x))
                  )
                )))
(RecDef (Max x) (ite (= x nil) minus_infty
                (ite (>= (key x) (Max (left x)))
                  (ite (>= (key x) (Max (right x)))
                    (key x)
                    (Max (right x))
                  )
                  (ite (>= (Max (left x)) (Max (right x)))
                    (Max (left x))
                    (Max (right x))
                  )
                )))

(RecDef (BST x) (ite (= x nil) True (Exists (= lft (left x)) (Exists (= rht (right x)) (Exists (= k (key x))
                                (* (* (* (= k (key x)) (and (< k plus_infty) (< minus_infty k)) ) 
                                (and (BST lft) (< (Max lft) k))) (and (BST rht) (< k (Min rht))))
                          )
                        )
                      )
                ))

(RecDef (Keys x) (ite (= x nil) EmptySetInt
                      (SetAdd (SetUnion (Keys (left x)) (Keys (right x)))
                              (key x))))


(lemma (x) (=> (BST x) (=> (> (Min x) k) (not (IsMember k (Keys x))) )))
(lemma (x) (=> (BST x) (=> (< (Max x) k) (not (IsMember k (Keys x))) )))

(Var ret Bool)
(Var tmp Loc)

(Program bst_find_rec (x k) (ret))
(Pre (* (and (< k plus_infty) (< minus_infty k)) (BST x)))
(Post (and (BST x) (and (= (Keys x) (Old (Keys x))) (and (= (Min x) (Old (Min x)))
           (and (= (Max x) (Old (Max x))) (= ret (IsMember k (Keys x))) )))))

(If (= x nil)
 Then
  (assign ret False)
  (return)
 Else
  (If (= k (key x))
   Then
    (assign ret True)
    (return)
   Else
    (If (< k (key x))
     Then
      (assign tmp (left x))
      (call bst_find_rec (tmp k) (ret))
      (return)
     Else
      (assign tmp (right x))
      (call bst_find_rec (tmp k) (ret))
      (return)
    )
  )
)
