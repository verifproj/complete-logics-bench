(Function key   Loc Int)
(Function left  Loc Loc)
(Function right Loc Loc)

(EqSp (BST (Keys Min Max)))

(RecFunction BST  Loc Bool)
(RecFunction Keys Loc SetInt)
(RecFunction Min  Loc Int)
(RecFunction Max  Loc Int)

(Var plus_infty Int)
(Var minus_infty Int)

(Var x Loc)
(Var lft Loc)
(Var rht Loc)
(Var k Int)

(RecDef (Min x) (ite (= x nil) plus_infty
                (ite (<= (key x) (Min (left x)))
                  (ite (<= (key x) (Min (right x)))
                    (key x)
                    (Min (right x))
                  )
                  (ite (<= (Min (left x)) (Min (right x)))
                    (Min (left x))
                    (Min (right x))
                  )
                )))
(RecDef (Max x) (ite (= x nil) minus_infty
                (ite (>= (key x) (Max (left x)))
                  (ite (>= (key x) (Max (right x)))
                    (key x)
                    (Max (right x))
                  )
                  (ite (>= (Max (left x)) (Max (right x)))
                    (Max (left x))
                    (Max (right x))
                  )
                )))

(RecDef (BST x) (ite (= x nil) True (Exists (= lft (left x)) (Exists (= rht (right x)) (Exists (= k (key x))
                                (* (* (* (= k (key x)) (and (< k plus_infty) (< minus_infty k)) ) 
                                (and (BST lft) (< (Max lft) k))) (and (BST rht) (< k (Min rht))))
                          )
                        )
                      )
                ))

(RecDef (Keys x) (ite (= x nil) EmptySetInt
                      (SetAdd (SetUnion (Keys (left x)) (Keys (right x)))
                              (key x))))


(Var ret Loc)
(Var left_right Loc)

(Program rotate_right (x) (ret))
(Pre (* (not (= x nil)) (nonsepand (BST x) (not (= (left x) nil)))
))


(Post (and (BST ret) (= (Keys ret) (Old (Keys x)))
      ))

(assign lft (left x))
(assign left_right (right lft))
(assign (left x) left_right)
(assign (right lft) x)
(assign ret lft)
(return)
